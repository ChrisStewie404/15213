                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f45806000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6d803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7c801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
                            | 	# count = 0;
0x032: 6300                 | 	xorq %rax, %rax
0x034: c0f2fbffffffffffffff | 	iaddq $-5, %rdx
0x03e: 716401000000000000   | 	jle s1
0x047:                      | L6:
0x047: 50870000000000000000 | 	mrmovq (%rdi), %r8	# read val from src...
0x051: 40860000000000000000 | 	rmmovq %r8, (%rsi)	# ...and store it to dst
0x05b: 6288                 | 	andq %r8, %r8		# val <= 0?
0x05d: 717000000000000000   | 	jle n1
0x066: c0f00100000000000000 | 	iaddq $1,%rax 		# count++
0x070:                      | n1:
0x070: 50970800000000000000 | 	mrmovq 8(%rdi), %r9	# read val from src...
0x07a: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)	# ...and store it to dst
0x084: 6299                 | 	andq %r9, %r9		# val <= 0?
0x086: 719900000000000000   | 	jle n2
0x08f: c0f00100000000000000 | 	iaddq $1,%rax 		# count++
0x099:                      | n2:
0x099: 50a71000000000000000 | 	mrmovq 0x10(%rdi), %r10	# read val from src...
0x0a3: 40a61000000000000000 | 	rmmovq %r10, 0x10(%rsi)	# ...and store it to dst
0x0ad: 62aa                 | 	andq %r10, %r10			# val <= 0?
0x0af: 71c200000000000000   | 	jle n3
0x0b8: c0f00100000000000000 | 	iaddq $1,%rax 			# count++
0x0c2:                      | n3:
0x0c2: 50b71800000000000000 | 	mrmovq 0x18(%rdi), %r11	# read val from src...
0x0cc: 40b61800000000000000 | 	rmmovq %r11, 0x18(%rsi)	# ...and store it to dst
0x0d6: 62bb                 | 	andq %r11, %r11			# val <= 0?
0x0d8: 71eb00000000000000   | 	jle n4
0x0e1: c0f00100000000000000 | 	iaddq $1,%rax 			# count++
0x0eb:                      | n4:
0x0eb: 50c72000000000000000 | 	mrmovq 0x20(%rdi), %r12	# read val from src...
0x0f5: 40c62000000000000000 | 	rmmovq %r12, 0x20(%rsi)	# ...and store it to dst
0x0ff: 62cc                 | 	andq %r12, %r12			# val <= 0?
0x101: 711401000000000000   | 	jle n5
0x10a: c0f00100000000000000 | 	iaddq $1,%rax # count++
0x114:                      | n5:
0x114: 50d72800000000000000 | 	mrmovq 0x28(%rdi), %r13	# read val from src...
0x11e: 40d62800000000000000 | 	rmmovq %r13, 0x28(%rsi)	# ...and store it to dst
0x128: 62dd                 | 	andq %r13, %r13			# val <= 0?
0x12a: 713d01000000000000   | 	jle n6
0x133: c0f00100000000000000 | 	iaddq $1,%rax 			# count++
0x13d:                      | n6:
0x13d: c0f73000000000000000 | 	iaddq $0x30, %rdi
0x147: c0f63000000000000000 | 	iaddq $0x30, %rsi
0x151: c0f2faffffffffffffff | 	iaddq $-6, %rdx
0x15b: 764700000000000000   | 	jg L6
0x164:                      | s1:
0x164: c0f20500000000000000 | 	iaddq $5, %rdx
0x16e: 71c701000000000000   | 	jle Done
0x177:                      | L1:
0x177: 50870000000000000000 | 	mrmovq (%rdi), %r8# read val from src...
0x181: 40860000000000000000 | 	rmmovq %r8, (%rsi)# ...and store it to dst
0x18b: 6288                 | 	andq %r8, %r8# val <= 0?
0x18d: 71a001000000000000   | 	jle o1
0x196: c0f00100000000000000 | 	iaddq $1,%rax # count++
0x1a0:                      | o1:
0x1a0: c0f70800000000000000 | 	iaddq $8, %rdi
0x1aa: c0f60800000000000000 | 	iaddq $8, %rsi
0x1b4: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x1be: 767701000000000000   | 	jg L1
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1c7:                      | Done:
0x1c7: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1c8:                      | End:
                            | #/* $end ncopy-ys */
0x1c8:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1c8:                      | 	.align 8
0x1c8:                      | src:
0x1c8: 0100000000000000     | 	.quad 1
0x1d0: 0200000000000000     | 	.quad 2
0x1d8: fdffffffffffffff     | 	.quad -3
0x1e0: fcffffffffffffff     | 	.quad -4
0x1e8: fbffffffffffffff     | 	.quad -5
0x1f0: faffffffffffffff     | 	.quad -6
0x1f8: f9ffffffffffffff     | 	.quad -7
0x200: 0800000000000000     | 	.quad 8
0x208: f7ffffffffffffff     | 	.quad -9
0x210: f6ffffffffffffff     | 	.quad -10
0x218: f5ffffffffffffff     | 	.quad -11
0x220: f4ffffffffffffff     | 	.quad -12
0x228: 0d00000000000000     | 	.quad 13
0x230: 0e00000000000000     | 	.quad 14
0x238: f1ffffffffffffff     | 	.quad -15
0x240: 1000000000000000     | 	.quad 16
0x248: 1100000000000000     | 	.quad 17
0x250: eeffffffffffffff     | 	.quad -18
0x258: 1300000000000000     | 	.quad 19
0x260: 1400000000000000     | 	.quad 20
0x268: 1500000000000000     | 	.quad 21
0x270: 1600000000000000     | 	.quad 22
0x278: e9ffffffffffffff     | 	.quad -23
0x280: 1800000000000000     | 	.quad 24
0x288: 1900000000000000     | 	.quad 25
0x290: e6ffffffffffffff     | 	.quad -26
0x298: 1b00000000000000     | 	.quad 27
0x2a0: 1c00000000000000     | 	.quad 28
0x2a8: 1d00000000000000     | 	.quad 29
0x2b0: 1e00000000000000     | 	.quad 30
0x2b8: e1ffffffffffffff     | 	.quad -31
0x2c0: 2000000000000000     | 	.quad 32
0x2c8: dfffffffffffffff     | 	.quad -33
0x2d0: deffffffffffffff     | 	.quad -34
0x2d8: 2300000000000000     | 	.quad 35
0x2e0: dcffffffffffffff     | 	.quad -36
0x2e8: dbffffffffffffff     | 	.quad -37
0x2f0: 2600000000000000     | 	.quad 38
0x2f8: d9ffffffffffffff     | 	.quad -39
0x300: 2800000000000000     | 	.quad 40
0x308: d7ffffffffffffff     | 	.quad -41
0x310: d6ffffffffffffff     | 	.quad -42
0x318: 2b00000000000000     | 	.quad 43
0x320: d4ffffffffffffff     | 	.quad -44
0x328: d3ffffffffffffff     | 	.quad -45
0x330: d2ffffffffffffff     | 	.quad -46
0x338: 2f00000000000000     | 	.quad 47
0x340: d0ffffffffffffff     | 	.quad -48
0x348: cfffffffffffffff     | 	.quad -49
0x350: 3200000000000000     | 	.quad 50
0x358: cdffffffffffffff     | 	.quad -51
0x360: ccffffffffffffff     | 	.quad -52
0x368: cbffffffffffffff     | 	.quad -53
0x370: caffffffffffffff     | 	.quad -54
0x378: 3700000000000000     | 	.quad 55
0x380: c8ffffffffffffff     | 	.quad -56
0x388: 3900000000000000     | 	.quad 57
0x390: 3a00000000000000     | 	.quad 58
0x398: 3b00000000000000     | 	.quad 59
0x3a0: 3c00000000000000     | 	.quad 60
0x3a8: 3d00000000000000     | 	.quad 61
0x3b0: c2ffffffffffffff     | 	.quad -62
0x3b8: 3f00000000000000     | 	.quad 63
0x3c0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x3d0:                      | 	.align 16
0x3d0:                      | Predest:
0x3d0: fadebc0000000000     | 	.quad 0xbcdefa
0x3d8:                      | dest:
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0:                      | Postdest:
0x5d0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x5d8:                      | .align 8
                            | # Run time stack
0x5d8: 0000000000000000     | 	.quad 0
0x5e0: 0000000000000000     | 	.quad 0
0x5e8: 0000000000000000     | 	.quad 0
0x5f0: 0000000000000000     | 	.quad 0
0x5f8: 0000000000000000     | 	.quad 0
0x600: 0000000000000000     | 	.quad 0
0x608: 0000000000000000     | 	.quad 0
0x610: 0000000000000000     | 	.quad 0
0x618: 0000000000000000     | 	.quad 0
0x620: 0000000000000000     | 	.quad 0
0x628: 0000000000000000     | 	.quad 0
0x630: 0000000000000000     | 	.quad 0
0x638: 0000000000000000     | 	.quad 0
0x640: 0000000000000000     | 	.quad 0
0x648: 0000000000000000     | 	.quad 0
0x650: 0000000000000000     | 	.quad 0
                            | 
0x658:                      | Stack:
